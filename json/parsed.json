{
  "sard/CWE415_Double_Free/CWE415_Double_Free__malloc_free_struct_42.c": {
    "": {
      "toks": "static twoIntsStruct * badSource ( twoIntsStruct * data ) { data = ( twoIntsStruct * ) malloc ( 100 * sizeof ( twoIntsStruct ) ) ; if ( data == NULL ) { exit ( -1 ) ; } free ( data ) ; return data ; } void CWE415_Double_Free__malloc_free_struct_42_bad ( ) { twoIntsStruct * data ; data = NULL ; data = badSource ( data ) ; free ( data ) ; } static twoIntsStruct * goodG2BSource ( twoIntsStruct * data ) { data = ( twoIntsStruct * ) malloc ( 100 * sizeof ( twoIntsStruct ) ) ; if ( data == NULL ) { exit ( -1 ) ; } return data ; } static void goodG2B ( ) { twoIntsStruct * data ; data = NULL ; data = goodG2BSource ( data ) ; free ( data ) ; } static twoIntsStruct * goodB2GSource ( twoIntsStruct * data ) { data = ( twoIntsStruct * ) malloc ( 100 * sizeof ( twoIntsStruct ) ) ; if ( data == NULL ) { exit ( -1 ) ; } free ( data ) ; return data ; } static void goodB2G ( ) { twoIntsStruct * data ; data = NULL ; data = goodB2GSource ( data ) ; } void CWE415_Double_Free__malloc_free_struct_42_good ( ) { goodB2G ( ) ; goodG2B ( ) ; } ",
      "errs": [
        "sard/CWE415_Double_Free/CWE415_Double_Free__malloc_free_struct_42.c:52:5: error: Returning/dereferencing 'data' after it is deallocated / released [deallocret]|%$%|    return data;|%$%|    ^"
      ],
      "num_checks": 27,
      "tokenized_lines": [
        3,
        4,
        5,
        6,
        8,
        9,
        10,
        12,
        13,
        14,
        16,
        17,
        19,
        20,
        27,
        28,
        29,
        30,
        32,
        33,
        35,
        36,
        37,
        39,
        40,
        42,
        43,
        46,
        47,
        48,
        49,
        51,
        52,
        53,
        55,
        56,
        57,
        59,
        60,
        64,
        66,
        67,
        68,
        69,
        70
      ]
    },
    "INCLUDEMAIN": {
      "toks": "static twoIntsStruct * badSource ( twoIntsStruct * data ) { data = ( twoIntsStruct * ) malloc ( 100 * sizeof ( twoIntsStruct ) ) ; if ( data == NULL ) { exit ( -1 ) ; } free ( data ) ; return data ; } void CWE415_Double_Free__malloc_free_struct_42_bad ( ) { twoIntsStruct * data ; data = NULL ; data = badSource ( data ) ; free ( data ) ; } static twoIntsStruct * goodG2BSource ( twoIntsStruct * data ) { data = ( twoIntsStruct * ) malloc ( 100 * sizeof ( twoIntsStruct ) ) ; if ( data == NULL ) { exit ( -1 ) ; } return data ; } static void goodG2B ( ) { twoIntsStruct * data ; data = NULL ; data = goodG2BSource ( data ) ; free ( data ) ; } static twoIntsStruct * goodB2GSource ( twoIntsStruct * data ) { data = ( twoIntsStruct * ) malloc ( 100 * sizeof ( twoIntsStruct ) ) ; if ( data == NULL ) { exit ( -1 ) ; } free ( data ) ; return data ; } static void goodB2G ( ) { twoIntsStruct * data ; data = NULL ; data = goodB2GSource ( data ) ; } void CWE415_Double_Free__malloc_free_struct_42_good ( ) { goodB2G ( ) ; goodG2B ( ) ; } int main ( int argc , char * argv [ ] ) { srand ( ( int ) time ( NULL ) ) ; printLine ( \"Calling good()...\" ) ; CWE415_Double_Free__malloc_free_struct_42_good ( ) ; printLine ( \"Finished good()\" ) ; printLine ( \"Calling bad()...\" ) ; CWE415_Double_Free__malloc_free_struct_42_bad ( ) ; printLine ( \"Finished bad()\" ) ; return 0 ; } ",
      "num_checks": 27,
      "errs": [],
      "tokenized_lines": [
        3,
        4,
        5,
        6,
        8,
        9,
        10,
        12,
        13,
        14,
        16,
        17,
        19,
        20,
        27,
        28,
        29,
        30,
        32,
        33,
        35,
        36,
        37,
        39,
        40,
        42,
        43,
        46,
        47,
        48,
        49,
        51,
        52,
        53,
        55,
        56,
        57,
        59,
        60,
        64,
        66,
        67,
        68,
        69,
        70,
        81,
        82,
        84,
        86,
        87,
        88,
        91,
        92,
        93,
        95,
        96
      ]
    }
  },
  "sard/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_82_bad.cpp": {
    "": {
      "toks": "namespace CWE476_NULL_Pointer_Dereference__class_82 { class CWE476_NULL_Pointer_Dereference__class_82_base { public: virtual void action ( TwoIntsClass * data ) = 0 ; } ; class CWE476_NULL_Pointer_Dereference__class_82_bad : public CWE476_NULL_Pointer_Dereference__class_82_base { public: void action ( TwoIntsClass * data ) ; } ; class CWE476_NULL_Pointer_Dereference__class_82_goodG2B : public CWE476_NULL_Pointer_Dereference__class_82_base { public: void action ( TwoIntsClass * data ) ; } ; class CWE476_NULL_Pointer_Dereference__class_82_goodB2G : public CWE476_NULL_Pointer_Dereference__class_82_base { public: void action ( TwoIntsClass * data ) ; } ; } namespace CWE476_NULL_Pointer_Dereference__class_82 { void CWE476_NULL_Pointer_Dereference__class_82_bad :: action ( TwoIntsClass * data ) { printIntLine ( data . intOne ) ; delete data ; } } ",
      "num_checks": 27,
      "errs": [],
      "tokenized_lines": [
        33,
        22,
        23,
        25,
        26,
        28,
        30,
        31
      ]
    }
  },
  "sard/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_82_goodB2G.cpp": {
    "": {
      "toks": "namespace CWE476_NULL_Pointer_Dereference__class_82 { class CWE476_NULL_Pointer_Dereference__class_82_base { public: virtual void action ( TwoIntsClass * data ) = 0 ; } ; class CWE476_NULL_Pointer_Dereference__class_82_bad : public CWE476_NULL_Pointer_Dereference__class_82_base { public: void action ( TwoIntsClass * data ) ; } ; class CWE476_NULL_Pointer_Dereference__class_82_goodG2B : public CWE476_NULL_Pointer_Dereference__class_82_base { public: void action ( TwoIntsClass * data ) ; } ; class CWE476_NULL_Pointer_Dereference__class_82_goodB2G : public CWE476_NULL_Pointer_Dereference__class_82_base { public: void action ( TwoIntsClass * data ) ; } ; } namespace CWE476_NULL_Pointer_Dereference__class_82 { void CWE476_NULL_Pointer_Dereference__class_82_goodB2G :: action ( TwoIntsClass * data ) { if ( data != NULL ) { printIntLine ( data . intOne ) ; delete data ; } else { printLine ( \"data is NULL\" ) ; } } } ",
      "num_checks": 27,
      "errs": [],
      "tokenized_lines": [
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        22,
        23,
        25,
        26,
        28,
        29,
        30,
        31
      ]
    }
  },
  "sard/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_82_goodG2B.cpp": {
    "": {
      "toks": "namespace CWE476_NULL_Pointer_Dereference__class_82 { class CWE476_NULL_Pointer_Dereference__class_82_base { public: virtual void action ( TwoIntsClass * data ) = 0 ; } ; class CWE476_NULL_Pointer_Dereference__class_82_bad : public CWE476_NULL_Pointer_Dereference__class_82_base { public: void action ( TwoIntsClass * data ) ; } ; class CWE476_NULL_Pointer_Dereference__class_82_goodG2B : public CWE476_NULL_Pointer_Dereference__class_82_base { public: void action ( TwoIntsClass * data ) ; } ; class CWE476_NULL_Pointer_Dereference__class_82_goodB2G : public CWE476_NULL_Pointer_Dereference__class_82_base { public: void action ( TwoIntsClass * data ) ; } ; } namespace CWE476_NULL_Pointer_Dereference__class_82 { void CWE476_NULL_Pointer_Dereference__class_82_goodG2B :: action ( TwoIntsClass * data ) { printIntLine ( data . intOne ) ; delete data ; } } ",
      "num_checks": 27,
      "errs": [],
      "tokenized_lines": [
        33,
        22,
        23,
        25,
        26,
        28,
        30,
        31
      ]
    }
  },
  "sard/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_82a.cpp": {
    "": {
      "toks": "namespace CWE476_NULL_Pointer_Dereference__class_82 { class CWE476_NULL_Pointer_Dereference__class_82_base { public: virtual void action ( TwoIntsClass * data ) = 0 ; } ; class CWE476_NULL_Pointer_Dereference__class_82_bad : public CWE476_NULL_Pointer_Dereference__class_82_base { public: void action ( TwoIntsClass * data ) ; } ; class CWE476_NULL_Pointer_Dereference__class_82_goodG2B : public CWE476_NULL_Pointer_Dereference__class_82_base { public: void action ( TwoIntsClass * data ) ; } ; class CWE476_NULL_Pointer_Dereference__class_82_goodB2G : public CWE476_NULL_Pointer_Dereference__class_82_base { public: void action ( TwoIntsClass * data ) ; } ; } namespace CWE476_NULL_Pointer_Dereference__class_82 { void bad ( ) { TwoIntsClass * data ; data = NULL ; CWE476_NULL_Pointer_Dereference__class_82_base * baseObject ; baseObject = new CWE476_NULL_Pointer_Dereference__class_82_bad ; baseObject . action ( data ) ; delete baseObject ; } static void goodG2B ( ) { TwoIntsClass * data ; { TwoIntsClass * tmpData ; tmpData = new TwoIntsClass ; tmpData . intOne = 0 ; tmpData . intTwo = 0 ; data = tmpData ; } CWE476_NULL_Pointer_Dereference__class_82_base * baseObject ; baseObject = new CWE476_NULL_Pointer_Dereference__class_82_goodG2B ; baseObject . action ( data ) ; delete baseObject ; } static void goodB2G ( ) { TwoIntsClass * data ; data = NULL ; CWE476_NULL_Pointer_Dereference__class_82_base * baseObject ; baseObject = new CWE476_NULL_Pointer_Dereference__class_82_goodB2G ; baseObject . action ( data ) ; delete baseObject ; } void good ( ) { goodG2B ( ) ; goodB2G ( ) ; } } ",
      "errs": [
        "sard/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_82.h:23:1: error: Class 'CWE476_NULL_Pointer_Dereference__class_82_base' which is inherited by class 'CWE476_NULL_Pointer_Dereference__class_82_goodB2G' does not have a virtual destructor. [virtualDestructor]|%$%|class CWE476_NULL_Pointer_Dereference__class_82_base|%$%|^"
      ],
      "num_checks": 27,
      "tokenized_lines": [
        21,
        22,
        26,
        27,
        28,
        30,
        31,
        32,
        33,
        34,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        49,
        50,
        51,
        52,
        53,
        54,
        57,
        58,
        59,
        61,
        62,
        63,
        64,
        65,
        67,
        68,
        69,
        70,
        71,
        75
      ]
    },
    "INCLUDEMAIN": {
      "toks": "namespace CWE476_NULL_Pointer_Dereference__class_82 { class CWE476_NULL_Pointer_Dereference__class_82_base { public: virtual void action ( TwoIntsClass * data ) = 0 ; } ; class CWE476_NULL_Pointer_Dereference__class_82_bad : public CWE476_NULL_Pointer_Dereference__class_82_base { public: void action ( TwoIntsClass * data ) ; } ; class CWE476_NULL_Pointer_Dereference__class_82_goodG2B : public CWE476_NULL_Pointer_Dereference__class_82_base { public: void action ( TwoIntsClass * data ) ; } ; class CWE476_NULL_Pointer_Dereference__class_82_goodB2G : public CWE476_NULL_Pointer_Dereference__class_82_base { public: void action ( TwoIntsClass * data ) ; } ; } namespace CWE476_NULL_Pointer_Dereference__class_82 { void bad ( ) { TwoIntsClass * data ; data = NULL ; CWE476_NULL_Pointer_Dereference__class_82_base * baseObject ; baseObject = new CWE476_NULL_Pointer_Dereference__class_82_bad ; baseObject . action ( data ) ; delete baseObject ; } static void goodG2B ( ) { TwoIntsClass * data ; { TwoIntsClass * tmpData ; tmpData = new TwoIntsClass ; tmpData . intOne = 0 ; tmpData . intTwo = 0 ; data = tmpData ; } CWE476_NULL_Pointer_Dereference__class_82_base * baseObject ; baseObject = new CWE476_NULL_Pointer_Dereference__class_82_goodG2B ; baseObject . action ( data ) ; delete baseObject ; } static void goodB2G ( ) { TwoIntsClass * data ; data = NULL ; CWE476_NULL_Pointer_Dereference__class_82_base * baseObject ; baseObject = new CWE476_NULL_Pointer_Dereference__class_82_goodB2G ; baseObject . action ( data ) ; delete baseObject ; } void good ( ) { goodG2B ( ) ; goodB2G ( ) ; } } using namespace CWE476_NULL_Pointer_Dereference__class_82 ; int main ( int argc , char * argv [ ] ) { srand ( ( int ) time ( NULL ) ) ; printLine ( \"Calling good()...\" ) ; good ( ) ; printLine ( \"Finished good()\" ) ; printLine ( \"Calling bad()...\" ) ; bad ( ) ; printLine ( \"Finished bad()\" ) ; return 0 ; } ",
      "num_checks": 27,
      "errs": [],
      "tokenized_lines": [
        21,
        22,
        26,
        27,
        28,
        30,
        31,
        32,
        33,
        34,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        49,
        50,
        51,
        52,
        53,
        54,
        57,
        58,
        59,
        61,
        62,
        63,
        64,
        65,
        67,
        68,
        69,
        70,
        71,
        75,
        84,
        86,
        87,
        89,
        91,
        92,
        93,
        96,
        97,
        98,
        100,
        101
      ]
    }
  }
}